项目简介：制作这个项目分为四个阶段
       第一阶段：通过制作客户端来熟悉Go开发，多线程和网络开发
       第二阶段：通过制作服务端创建一个企业框架级别的服务，要用到各种高效的方法和工具
       第三阶段：往项目里添加更多刁钻的需求，积累处理业务逻辑经验，掌握各种工具用法
       第四阶段：在网上学习各种框架和工具，并想办法添加到该项目里

简历亮点：
    1. gorm
    2. ants协程池
    3. 登录注册功能，匹配功能，实时聊天功能
    4. 心跳机制维持长连接
    5. 客户端多线程编程，读写锁，在线重连
    6. 基于tcp，socket编程
    
竞赛经历：
    1. 解决问题时有思路
    2. 直面压力的能力
    3. 解决问题时会想到他的最坏情况
    4. 团队之间沟通配合的能力
    5. 为我的人生增加了一个特长和爱好，交了很多朋友


当前需求：搞清楚四川麻将服务端的逻辑

1. 如何让匹配更稳定？并且尽量不浪费服务器资源？
       · 匹配稳定性
       · 不间断检测连接以及状态
       · 服务器终止长时间不用的服务

2. 如何应对大流量？
       · 可以使用动态协程池，会根据流量大小调整协程数
       · 搞懂公司代码的拉模式，搞清楚他为什么放弃了协程池

3. 搭建聊天系统

4. 新搭建一个重连界面，完成

5. 为客户端添加发牌和停牌功能	完成
       
6. 搞清楚四川麻将客户端的逻辑      完成
    子需求：搞清楚 struct{} 的作用
    子需求：多次重连会不会导致协程堆积？
    tip: 值传递是很麻烦的，因为很多结构里都有指针，值传递后指针指向的是同一个值，这会出现很多
        问题，而且Go里没有引用类型，所以大部分情况都要使用指针。
    子需求：测试log定向文件是否一直好用。
    子需求：重连和客户端设计冲突了，这个要处理一下
    子需求：如果无缓存的通道已满，那么后续的数据是否会直接丢弃？
    子需求：Tick和NewTicker的区别？
    子需求：取消匹配那里需要改一下。
    实验：通道关闭后还会阻塞吗？
    子需求：搞清楚Golang的变量生命周期

7. 实现服务的热重启

8. 把 context.Context 加入到我的项目里来

9. 尝试做一个反向代理和负载均衡

10. 搞清楚四川麻将服务端的逻辑

11. 搞懂什么是依赖注入，并将依赖注入加入到我的项目里

12. 听说net/http包中集成了cookie，session等元素，之后把这个项目改成http形式

13. 搞懂docker和k8s是什么，并将我的项目里利用这二者

14. 搞懂什么是数据库连接池，并基于sql.DB实现数据库连接池